<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CampusLink - Lost & Found</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f4f7f6;
      margin: 0;
      padding: 0;
    }
    header {
      background: #003366;
      color: #fff;
      padding: 10px 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    header h1 {
      margin: 0;
      font-size: 1.3em;
    }
    main {
      max-width: 900px;
      margin: 25px auto;
      background: #fff;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    h2 {
      text-align: center;
      color: #003366;
      font-size: 1.4em;
    }
    .tab-buttons {
      display: flex;
      justify-content: center;
      gap: 10px;
      margin-bottom: 20px;
    }
    .tab-buttons button {
      padding: 6px 14px;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      background: #e4e4e4;
      font-size: 0.9em;
    }
    .tab-buttons button.active {
      background: #003366;
      color: white;
    }
    .form-section {
      display: none;
      margin-bottom: 20px;
    }
    .form-section.active {
      display: block;
    }
    form {
      display: flex;
      flex-direction: column;
      gap: 8px;
      background: #f8f9fa;
      padding: 12px;
      border-radius: 10px;
    }
    input, textarea {
      padding: 6px;
      border-radius: 5px;
      border: 1px solid #ccc;
      font-size: 0.9em;
    }
    button.submit-btn {
      background: #003366;
      color: white;
      border: none;
      padding: 6px;
      border-radius: 5px;
      cursor: pointer;
      font-size: 0.9em;
    }
    .cards {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
      gap: 12px;
    }
    .card {
      background: #f9f9f9;
      border: 1px solid #ddd;
      border-radius: 10px;
      padding: 8px;
      font-size: 0.85em;
      position: relative;
    }
    .card h3 {
      color: #003366;
      margin: 0 0 4px 0;
      font-size: 1em;
    }
    .card img {
      width: 100%;
      height: 120px;
      object-fit: cover;
      border-radius: 8px;
      margin-bottom: 6px;
    }
    .card p {
      margin: 2px 0;
    }
    .card button {
      position: absolute;
      bottom: 8px;
      right: 8px;
      border: none;
      background: #d9534f;
      color: white;
      padding: 3px 6px;
      border-radius: 4px;
      cursor: pointer;
      font-size: 0.75em;
    }
    .search-section {
      margin-top: 25px;
      text-align: center;
    }
    .search-section input {
      width: 60%;
      padding: 6px;
      border-radius: 5px;
      border: 1px solid #ccc;
      font-size: 0.9em;
    }
  </style>
</head>
<body>

  <header>
    <h1>CampusLink Lost & Found</h1>
  </header>

  <main>
    <h2>Lost & Found Portal</h2>
    <div class="tab-buttons">
      <button id="lostTab" class="active">Lost Items</button>
      <button id="foundTab">Found Items</button>
    </div>

    <!-- Lost Form -->
    <div id="lostForm" class="form-section active">
      <form id="addLostForm">
        <input type="text" id="lostTitle" placeholder="Item title" required>
        <input type="text" id="lostLocation" placeholder="Location" required>
        <textarea id="lostDetails" placeholder="Details" required></textarea>
        <input type="text" id="lostContact" placeholder="Contact info" required>
        <input type="file" id="lostImage" accept="image/*">
        <button type="submit" class="submit-btn">Add Lost Item</button>
      </form>
    </div>

    <!-- Found Form -->
    <div id="foundForm" class="form-section">
      <form id="addFoundForm">
        <input type="text" id="foundTitle" placeholder="Item title" required>
        <input type="text" id="foundLocation" placeholder="Location" required>
        <textarea id="foundDetails" placeholder="Details" required></textarea>
        <input type="text" id="foundContact" placeholder="Contact info" required>
        <input type="file" id="foundImage" accept="image/*">
        <button type="submit" class="submit-btn">Add Found Item</button>
      </form>
    </div>

    <h3>Lost Items</h3>
    <div id="lostList" class="cards"></div>

    <h3>Found Items</h3>
    <div id="foundList" class="cards"></div>

    <div class="search-section">
      <h3>Search for Match</h3>
      <input type="text" id="searchBox" placeholder="Enter lost item title to find matches">
      <div id="searchResults" class="cards" style="margin-top:10px;"></div>
    </div>
  </main>

  <script>
    const lostTab = document.getElementById('lostTab');
    const foundTab = document.getElementById('foundTab');
    const lostForm = document.getElementById('lostForm');
    const foundForm = document.getElementById('foundForm');
    const lostList = document.getElementById('lostList');
    const foundList = document.getElementById('foundList');
    const searchBox = document.getElementById('searchBox');
    const searchResults = document.getElementById('searchResults');

    let lostItems = [];
    let foundItems = [];

    lostTab.onclick = () => {
      lostTab.classList.add('active');
      foundTab.classList.remove('active');
      lostForm.classList.add('active');
      foundForm.classList.remove('active');
    };
    foundTab.onclick = () => {
      foundTab.classList.add('active');
      lostTab.classList.remove('active');
      foundForm.classList.add('active');
      lostForm.classList.remove('active');
    };

    // Render cards
    function renderItems() {
      lostList.innerHTML = lostItems.map((item, i) => `
        <div class="card">
          ${item.image ? `<img src="${item.image}" alt="${item.title}">` : ''}
          <h3>${item.title}</h3>
          <p><b>Location:</b> ${item.location}</p>
          <p>${item.details}</p>
          <p><b>Contact:</b> ${item.contact}</p>
          <button onclick="deleteItem('lost', ${i})">Delete</button>
        </div>
      `).join('');
      foundList.innerHTML = foundItems.map((item, i) => `
        <div class="card">
          ${item.image ? `<img src="${item.image}" alt="${item.title}">` : ''}
          <h3>${item.title}</h3>
          <p><b>Location:</b> ${item.location}</p>
          <p>${item.details}</p>
          <p><b>Contact:</b> ${item.contact}</p>
          <button onclick="deleteItem('found', ${i})">Delete</button>
        </div>
      `).join('');
    }

    // Convert uploaded image to Base64
    function getBase64(file, callback) {
      const reader = new FileReader();
      reader.onload = function(e) {
        callback(e.target.result);
      };
      reader.readAsDataURL(file);
    }

    // Add lost item
    document.getElementById('addLostForm').addEventListener('submit', e => {
      e.preventDefault();
      const file = document.getElementById('lostImage').files[0];
      if (file) {
        getBase64(file, base64 => {
          lostItems.push({
            title: lostTitle.value.trim(),
            location: lostLocation.value.trim(),
            details: lostDetails.value.trim(),
            contact: lostContact.value.trim(),
            image: base64
          });
          e.target.reset();
          renderItems();
        });
      } else {
        lostItems.push({
          title: lostTitle.value.trim(),
          location: lostLocation.value.trim(),
          details: lostDetails.value.trim(),
          contact: lostContact.value.trim(),
          image: null
        });
        e.target.reset();
        renderItems();
      }
    });

    // Add found item
    document.getElementById('addFoundForm').addEventListener('submit', e => {
      e.preventDefault();
      const file = document.getElementById('foundImage').files[0];
      if (file) {
        getBase64(file, base64 => {
          foundItems.push({
            title: foundTitle.value.trim(),
            location: foundLocation.value.trim(),
            details: foundDetails.value.trim(),
            contact: foundContact.value.trim(),
            image: base64
          });
          e.target.reset();
          renderItems();
        });
      } else {
        foundItems.push({
          title: foundTitle.value.trim(),
          location: foundLocation.value.trim(),
          details: foundDetails.value.trim(),
          contact: foundContact.value.trim(),
          image: null
        });
        e.target.reset();
        renderItems();
      }
    });

    // Delete item
    function deleteItem(type, index) {
      if (type === 'lost') lostItems.splice(index, 1);
      else foundItems.splice(index, 1);
      renderItems();
    }

    // Search match (matches with found items)
    searchBox.addEventListener('input', () => {
      const query = searchBox.value.trim().toLowerCase();
      if (!query) {
        searchResults.innerHTML = '';
        return;
      }
      const matches = foundItems.filter(f => f.title.toLowerCase().includes(query));
      searchResults.innerHTML = matches.length ? matches.map(item => `
        <div class="card">
          ${item.image ? `<img src="${item.image}" alt="${item.title}">` : ''}
          <h3>${item.title}</h3>
          <p><b>Location:</b> ${item.location}</p>
          <p>${item.details}</p>
          <p><b>Contact:</b> ${item.contact}</p>
        </div>
      `).join('') : '<p>No matching found items.</p>';
    });

    window.deleteItem = deleteItem;
  </script>
</body>
</html>
